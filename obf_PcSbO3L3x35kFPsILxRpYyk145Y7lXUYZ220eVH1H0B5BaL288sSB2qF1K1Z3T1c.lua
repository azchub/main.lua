--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.9) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v90=v2(v0(v30,16));if v19 then local v112=0;local v113;while true do if (v112==0) then v113=v5(v90,v19);v19=nil;v112=1;end if (v112==1) then return v113;end end else return v90;end end end);local function v20(v31,v32,v33) if v33 then local v91=0;local v92;while true do if (v91==0) then v92=(v31/((5 -3)^(v32-((2 + 0) -1))))%((3 -1)^(((v33-1) -(v32-(2 -1))) + (620 -(555 + (91 -27))))) ;return v92-(v92%(932 -(857 + 74))) ;end end else local v93=(1633 -(68 + 997)) -(367 + 201) ;local v94;while true do if (v93==(927 -(214 + 713))) then v94=(1 + 1)^(v32-(1 + 0)) ;return (((v31%(v94 + v94))>=v94) and (878 -(282 + 595))) or ((2907 -(226 + 1044)) -(1523 + 114)) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 + 0 ;local v36;local v37;while true do if (v35==(4 -3)) then return (v37 * (373 -(32 + 85))) + v36 ;end if (v35==(0 -(350 -(87 + 263)))) then v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (3 -1) ;v35=1 + 0 ;end end end local function v23() local v38=180 -(67 + 113) ;local v39;local v40;local v41;local v42;while true do if (v38==(0 + 0)) then v39,v40,v41,v42=v1(v16,v18,v18 + (7 -4) );v18=v18 + 4 ;v38=1;end if (v38==(1 + 0)) then return (v42 * (66680831 -49903615)) + (v41 * ((179007 -112519) -(802 + (272 -122)))) + (v40 * 256) + v39 ;end end end local function v24() local v43=0 + (1138 -(116 + 1022)) ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(999 -(915 + 82))) then v48=v20(v45,59 -38 ,19 + 12 );v49=((v20(v45,41 -9 )==(1188 -(1069 + 118))) and  -1) or (2 -(860 -(814 + 45))) ;v43=6 -3 ;end if (v43==(1 + 0)) then v46=1;v47=(v20(v45,1 -0 ,49 -29 ) * ((8 -6)^32)) + v44 ;v43=1 + 1 + 0 + 0 ;end if (v43==(794 -(368 + 423))) then if (v48==(0 -(885 -(261 + 624)))) then if (v47==(18 -(10 + 8))) then return v49 * (0 -(0 -0)) ;else v48=443 -(416 + 26) ;v46=0 -(0 -0) ;end elseif (v48==((1959 -(1020 + 60)) + 1168)) then return ((v47==(0 -0)) and (v49 * ((439 -(145 + 293))/0))) or (v49 * NaN) ;end return v8(v49,v48-(1453 -(44 + 386)) ) * (v46 + (v47/((1488 -(998 + 488))^(17 + 35)))) ;end if (v43==(0 + (1423 -(630 + 793)))) then v44=v23();v45=v23();v43=(2744 -1971) -(201 + 571) ;end end end local function v25(v50) local v51=0 -0 ;local v52;local v53;while true do if (v51==2) then v53={};for v114=(4 + 0) -3 , #v52 do v53[v114]=v2(v1(v3(v52,v114,v114)));end v51=2 + 1 ;end if (v51==(0 -0)) then v52=nil;if  not v50 then local v120=1747 -(760 + 987) ;while true do if (v120==0) then v50=v23();if (v50==(1913 -((2844 -(87 + 968)) + 124))) then return "";end break;end end end v51=767 -(745 + 21) ;end if ((2 + 1)==v51) then return v6(v53);end if (v51==(2 -1)) then v52=v3(v16,v18,(v18 + v50) -((13 -10) -2) );v18=v18 + v50 ;v51=1 + 1 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v54=(function() return function(v95,v96,v97,v98,v99,v100,v101,v102,v103) local v104=(function() return 0;end)();local v95=(function() return;end)();local v96=(function() return;end)();while true do if (v104==0) then local v121=(function() return 0;end)();while true do if ((1763 -(454 + 1309))~=v121) then else v95=(function() return 0 + 0 ;end)();v96=(function() return nil;end)();v121=(function() return 1 -0 ;end)();end if (v121==1) then v104=(function() return 1 -0 ;end)();break;end end end if (v104~=1) then else local v122=(function() return 0 -0 ;end)();while true do if (v122==0) then while true do if (v95~=0) then else v96=(function() return v97();end)();if (v98(v96, #",", #":")==(285 -(134 + 151))) then local v129=(function() return 1665 -(970 + 695) ;end)();local v130=(function() return;end)();local v131=(function() return;end)();local v132=(function() return;end)();while true do if (v129~=(0 -0)) then else local v134=(function() return 1990 -(582 + 1408) ;end)();while true do if (v134==0) then v130=(function() return v98(v96,2, #"-19");end)();v131=(function() return v98(v96, #"xnxx",20 -14 );end)();v134=(function() return 1 -0 ;end)();end if (v134==1) then v129=(function() return 3 -2 ;end)();break;end end end if (v129~=2) then else if (v98(v131, #"|", #":")== #" ") then v132[1826 -(1195 + 629) ]=(function() return v101[v132[2]];end)();end if (v98(v131,2,2)== #">") then v132[ #"91("]=(function() return v101[v132[ #"91("]];end)();end v129=(function() return 3;end)();end if (v129==(1 -0)) then local v135=(function() return 241 -(187 + 54) ;end)();while true do if (v135==1) then v129=(function() return 2;end)();break;end if (v135==(780 -(162 + 618))) then v132=(function() return {v99(),v99(),nil,nil};end)();if (v130==(0 + 0)) then local v338=(function() return 0;end)();local v339=(function() return;end)();while true do if ((0 + 0)==v338) then v339=(function() return 0;end)();while true do if (v339==0) then v132[ #"91("]=(function() return v99();end)();v132[ #".dev"]=(function() return v99();end)();break;end end break;end end elseif (v130== #"]") then v132[ #"asd"]=(function() return v100();end)();elseif (v130==(3 -1)) then v132[ #"asd"]=(function() return v100() -((2 -0)^(2 + 14)) ;end)();elseif (v130== #"19(") then local v434=(function() return 1636 -(1373 + 263) ;end)();local v435=(function() return;end)();while true do if (v434==(1000 -(451 + 549))) then v435=(function() return 0;end)();while true do if (v435==0) then v132[ #"nil"]=(function() return v100() -(2^(6 + 10)) ;end)();v132[ #"0313"]=(function() return v99();end)();break;end end break;end end end v135=(function() return 1;end)();end end end if (v129==3) then if (v98(v131, #"19(", #"nil")== #"}") then v132[ #"xnxx"]=(function() return v101[v132[ #"asd1"]];end)();end v102[v103]=(function() return v132;end)();break;end end end break;end end return v95,v96,v97,v98,v99,v100,v101,v102,v103;end end end end end;end)();local v55=(function() return function(v105,v106,v107) local v108=(function() return 0;end)();local v109=(function() return;end)();while true do if ((0 -0)~=v108) then else v109=(function() return 0 -0 ;end)();while true do if (v109~=(1384 -(746 + 638))) then else local v127=(function() return 0;end)();while true do if ((0 + 0)==v127) then local v128=(function() return 0 -0 ;end)();while true do if (v128==(341 -(218 + 123))) then v105[v106-#"\\" ]=(function() return v107();end)();return v105,v106,v107;end end end end end end break;end end end;end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {};end)();local v59=(function() return {v56,v57,nil,v58};end)();local v60=(function() return v23();end)();local v61=(function() return {};end)();for v69= #".",v60 do local v70=(function() return 0;end)();local v71=(function() return;end)();local v72=(function() return;end)();local v73=(function() return;end)();while true do if (v70~=0) then else v71=(function() return 0 + 0 ;end)();v72=(function() return nil;end)();v70=(function() return 1;end)();end if (v70~=1) then else v73=(function() return nil;end)();while true do if (v71==0) then local v125=(function() return 0 + 0 ;end)();while true do if (v125==0) then v72=(function() return v21();end)();v73=(function() return nil;end)();v125=(function() return 1;end)();end if (v125~=1) then else v71=(function() return 561 -(306 + 254) ;end)();break;end end end if (v71~=(1 + 0)) then else if (v72== #",") then v73=(function() return v21()~=0 ;end)();elseif (v72==2) then v73=(function() return v24();end)();elseif (v72~= #"xnx") then else v73=(function() return v25();end)();end v61[v69]=(function() return v73;end)();break;end end break;end end end v59[ #"gha"]=(function() return v21();end)();for v74= #"/",v23() do FlatIdent_5431F,Descriptor,v21,v20,v22,v23,v61,v56,v74=(function() return v54(FlatIdent_5431F,Descriptor,v21,v20,v22,v23,v61,v56,v74);end)();end for v75= #">",v23() do v57,v75,v28=(function() return v55(v57,v75,v28);end)();end return v59;end local function v29(v63,v64,v65) local v66=v63[1];local v67=v63[3 -(1 + 0) ];local v68=v63[1470 -(899 + 568) ];return function(...) local v76=v66;local v77=v67;local v78=v68;local v79=v27;local v80=1 + 0 ;local v81= -(2 -(1318 -(1114 + 203)));local v82={};local v83={...};local v84=v12("#",...) -(291 -(60 + 230)) ;local v85={};local v86={};for v110=572 -(426 + 146) ,v84 do if (v110>=v78) then v82[v110-v78 ]=v83[v110 + 1 + 0 ];else v86[v110]=v83[v110 + (1457 -(282 + 1174)) ];end end local v87=(v84-v78) + (812 -(569 + (968 -(228 + 498)))) ;local v88;local v89;while true do local v111=0 -(0 + 0) ;while true do if ((4071>2909) and (v111==0)) then v88=v76[v80];v89=v88[1 + 0 + 0 ];v111=1;end if ((v111==((1688 -(174 + 489)) -(706 + (828 -510)))) or (2482>2719)) then if ((v89<=(1289 -((2626 -(830 + 1075)) + 530))) or (757>4403)) then if ((428==428) and (v89<=((1813 -(303 + 221)) -(945 + 326)))) then if (v89<=(19 -11)) then if (v89<=(3 + 0)) then if ((v89<=(701 -(271 + 429))) or (2091<31)) then if (v89==(0 + 0)) then local v137=0;local v138;while true do if (v137==0) then v138=v88[1502 -(1408 + 92) ];v86[v138](v13(v86,v138 + ((2356 -(231 + 1038)) -(461 + 625)) ,v88[1291 -(993 + 295) ]));break;end end else v86[v88[2]]();end elseif (v89==(1 + 1)) then v80=v88[1174 -(349 + 69 + 753) ];else v86[v88[1 + 1 ]]=v65[v88[1 + 2 ]];end elseif (v89<=(2 + 3)) then if (v89>(2 + 2)) then v86[v88[531 -(406 + 123) ]]=v65[v88[1772 -(1749 + 20) ]];else local v144=0 + 0 ;local v145;local v146;local v147;while true do if ((v144==1) or (2430>=4872)) then v147=v86[v145 + (1324 -(1249 + 73)) ];if (v147>(0 + 0)) then if (v146>v86[v145 + (1146 -(466 + (1841 -(171 + 991)))) ]) then v80=v88[3];else v86[v145 + (6 -3) ]=v146;end elseif ((v146<v86[v145 + 1 ]) or (4770<1735)) then v80=v88[8 -5 ];else v86[v145 + (1903 -(106 + (7393 -5599))) ]=v146;end break;end if ((v144==(0 + 0)) or (4439<=2350)) then v145=v88[1 + 1 ];v146=v86[v145];v144=2 -1 ;end end end elseif (v89<=(16 -(26 -16))) then if (v88[116 -(4 + 110) ]==v86[v88[588 -(57 + 527) ]]) then v80=v80 + (1428 -(41 + (3458 -2072))) ;else v80=v88[106 -(17 + 86) ];end elseif (v89==(5 + 2)) then if (v88[2]==v86[v88[8 -4 ]]) then v80=v80 + (2 -1) ;else v80=v88[169 -(122 + 44) ];end else v86[v88[2]]=v64[v88[5 -2 ]];end elseif ((v89<=((35 + 8) -(105 -75))) or (4479<4466)) then if ((2547>1225) and (v89<=(9 + 1))) then if ((4671>2674) and (v89==(2 + 7))) then v80=v88[5 -2 ];else local v149=65 -(30 + 35) ;local v150;while true do if (v149==(0 + 0)) then v150=v88[2];v86[v150]=v86[v150](v86[v150 + (1258 -(1043 + 214)) ]);break;end end end elseif ((v89<=(41 -30)) or (3696<3327)) then local v151=0;local v152;while true do if (v151==(1212 -(323 + 889))) then v152=v88[5 -3 ];v86[v152](v86[v152 + (581 -(361 + 219)) ]);break;end end elseif (v89>(332 -(53 + 267))) then v86[v88[1 + 1 ]]=v86[v88[416 -((43 -28) + 398) ]][v88[986 -(18 + 964) ]];else v86[v88[7 -5 ]]=v86[v88[(2 -0) + 1 ]][v88[3 + 1 ]];end elseif ((v89<=15) or (4542==2970)) then if (v89>(864 -(20 + 830))) then v86[v88[2 + (0 -0) ]]=v86[v88[3]]%v88[4] ;else v86[v88[2]]={};end elseif (v89<=16) then for v224=v88[2],v88[(1377 -(111 + 1137)) -(116 + 10) ] do v86[v224]=nil;end elseif (v89>(2 + 15)) then local v241=738 -(542 + 196) ;local v242;while true do if (v241==(0 -0)) then v242=v88[1 + 1 ];v86[v242](v13(v86,v242 + 1 + 0 ,v81));break;end end else local v243=v88[1 + (159 -(91 + 67)) ];local v244=v86[v88[3]];v86[v243 + 1 ]=v244;v86[v243]=v244[v88[10 -6 ]];end elseif (v89<=(71 -43)) then if (v89<=(1574 -(1126 + 425))) then if (v89<=((1264 -839) -(118 + 287))) then if ((252<=1977) and (v89==(74 -55))) then v86[v88[1 + 1 ]]=v86[v88[3]]%v86[v88[4]] ;else v86[v88[1123 -(118 + 1003) ]]=v86[v88[8 -5 ]] + v88[4] ;end elseif (v89<=(398 -(142 + 235))) then local v157=v88[9 -(530 -(423 + 100)) ];v86[v157](v13(v86,v157 + 1 + 0 ,v88[980 -(553 + 424) ]));elseif (v89>(41 -(1 + 18))) then do return;end else v86[v88[2 + 0 ]]=v86[v88[3 + 0 ]] + v86[v88[3 + 1 ]] ;end elseif (v89<=(11 + 14)) then if (v89==(14 + 10)) then v86[v88[4 -2 ]][v88[7 -4 ]]=v88[8 -4 ];else local v160=0 + 0 ;local v161;local v162;local v163;while true do if ((0 -0)==v160) then v161=v77[v88[756 -(239 + 514) ]];v162=nil;v160=1 + 0 ;end if (v160==(1331 -(797 + 532))) then for v341=1,v88[3 + 1 ] do local v342=0 + (0 -0) ;local v343;while true do if (v342==(0 -0)) then v80=v80 + ((628 + 575) -(373 + 829)) ;v343=v76[v80];v342=1;end if (v342==1) then if (v343[732 -(476 + 255) ]==(1183 -(369 + 761))) then v163[v341-(1 + 0) ]={v86,v343[5 -2 ]};else v163[v341-((1010 -(326 + 445)) -(64 + 174)) ]={v64,v343[3]};end v85[ #v85 + 1 + 0 ]=v163;break;end end end v86[v88[2 -(0 -0) ]]=v29(v161,v162,v65);break;end if ((1==v160) or (1436==3775)) then v163={};v162=v10({},{__index=function(v344,v345) local v346=336 -(144 + 192) ;local v347;while true do if (v346==(216 -(42 + 174))) then v347=v163[v345];return v347[1 + 0 ][v347[2 + 0 ]];end end end,__newindex=function(v348,v349,v350) local v351=0 + 0 ;local v352;while true do if ((v351==(1504 -(363 + 1141))) or (1618<930)) then v352=v163[v349];v352[1581 -(1183 + 397) ][v352[34 -(19 + 13) ]]=v350;break;end end end});v160=5 -3 ;end end end elseif (v89<=((32 -12) + 6)) then v86[v88[2 + 0 ]][v88[3]]=v86[v88[1979 -(1913 + 62) ]];elseif (v89>27) then v86[v88[2 + 0 ]]=v88[7 -4 ];else local v251=v88[1935 -(565 + 1368) ];local v252,v253=v79(v86[v251](v13(v86,v251 + 1 ,v81)));v81=(v253 + v251) -1 ;local v254=0 -0 ;for v309=v251,v81 do local v310=1661 -(1477 + 184) ;while true do if ((4723>4153) and ((0 -0)==v310)) then v254=v254 + 1 + 0 ;v86[v309]=v252[v254];break;end end end end elseif (v89<=(889 -((1314 -750) + 292))) then if (v89<=(51 -21)) then if (v89==29) then local v166=0 -0 ;local v167;while true do if (v166==(304 -(244 + 60))) then v167=v88[2 + 0 ];v86[v167]=v86[v167](v86[v167 + (477 -(41 + 435)) ]);break;end end elseif (v86[v88[1003 -(938 + 63) ]]==v88[4 + 0 ]) then v80=v80 + (1126 -(936 + 189)) ;else v80=v88[3];end elseif (v89<=(11 + 20)) then v86[v88[(4613 -2998) -(1565 + 48) ]]=v86[v88[3]] + v86[v88[1 + 2 + 1 ]] ;elseif ((v89>((2057 -887) -(782 + 356))) or (3654>=4654)) then v86[v88[2]]=v64[v88[(559 -289) -(176 + 91) ]];else v86[v88[4 -2 ]]=v86[v88[4 -1 ]]%v86[v88[(2908 -(1293 + 519)) -(975 + 117) ]] ;end elseif (v89<=(1910 -((319 -162) + 1718))) then if ((951<=1496) and (v89>(28 + 6))) then local v169=v88[6 -4 ];v86[v169]=v86[v169](v13(v86,v169 + (3 -2) ,v88[1021 -(697 + 321) ]));else v86[v88[5 -3 ]]=v88[5 -2 ] + v86[v88[8 -4 ]] ;end elseif (v89<=(15 + 21)) then do return;end elseif (v89==(96 -59)) then v86[v88[3 -1 ]]={};else v86[v88[5 -3 ]]();end elseif (v89<=(1284 -(322 + 905))) then if ((v89<=(658 -(602 + 9))) or (1736==571)) then if (v89<=(1231 -(449 + 740))) then if (v89<=(912 -(826 + 46))) then if ((v89==39) or (896>4769)) then local v172=947 -((468 -223) + (3026 -2324)) ;local v173;local v174;local v175;local v176;while true do if (v172==(6 -4)) then for v353=v173,v81 do v176=v176 + 1 + 0 ;v86[v353]=v174[v176];end break;end if ((v172==(1898 -(260 + (3858 -2220)))) or (1045<=1020)) then v173=v88[2];v174,v175=v79(v86[v173](v13(v86,v173 + (441 -(203 + 179 + 58)) ,v88[3])));v172=1;end if ((v172==(3 -2)) or (1160<=328)) then v81=(v175 + v173) -(1 + 0) ;v176=0 -0 ;v172=5 -(1 + 2) ;end end else local v177=1205 -(902 + 303) ;local v178;while true do if ((3808>2924) and (v177==0)) then v178=v88[3 -1 ];v86[v178]=v86[v178](v13(v86,v178 + ((4 -2) -1) ,v88[1 + 2 ]));break;end end end elseif ((3891<4919) and (v89>(1731 -(1121 + 569)))) then if ((v86[v88[216 -(22 + 192) ]]==v86[v88[687 -(483 + 200) ]]) or (2234<=1502)) then v80=v80 + (1464 -(325 + 1079 + 59)) ;else v80=v88[3];end else local v179=v88[1 + 1 ];local v180,v181=v79(v86[v179](v13(v86,v179 + (2 -1) ,v81)));v81=(v181 + v179) -1 ;local v182=0 -0 ;for v226=v179,v81 do v182=v182 + (766 -(468 + 297)) ;v86[v226]=v180[v182];end end elseif (v89<=(606 -(334 + 228))) then if (v89>43) then local v183=0 -0 ;local v184;while true do if (v183==(0 -0)) then v184=v88[(2 + 0) -0 ];do return v86[v184](v13(v86,v184 + 1 + 0 ,v88[239 -(141 + 95) ]));end break;end end else local v185=v86[v88[4 + 0 ]];if  not v185 then v80=v80 + (2 -1) ;else v86[v88[(1100 -(709 + 387)) -2 ]]=v185;v80=v88[1 + 2 ];end end elseif (v89<=(123 -78)) then v86[v88[2 + 0 ]]=v86[v88[1861 -(673 + 1185) ]];elseif (v89>(24 + 22)) then local v263=0;local v264;local v265;local v266;while true do if (v263==(0 -0)) then v264=v88[2 + (0 -0) ];v265=v86[v264 + (165 -(92 + (227 -156))) ];v263=1 + 0 ;end if ((v263==(1 -0)) or (2512<432)) then v266=v86[v264] + v265 ;v86[v264]=v266;v263=767 -(574 + 191) ;end if (v263==2) then if (v265>(0 + 0)) then if (v266<=v86[v264 + (2 -1) ]) then v80=v88[2 + 1 ];v86[v264 + (852 -(254 + 595)) ]=v266;end elseif ((v266>=v86[v264 + ((208 -81) -(55 + 71)) ]) or (1848==865)) then local v429=0 -0 ;while true do if (((1790 -(573 + 1217))==v429) or (4682<=4541)) then v80=v88[8 -5 ];v86[v264 + 1 + 2 ]=v266;break;end end end break;end end else local v267=0 -0 ;local v268;while true do if ((939 -(714 + 225))==v267) then v268=v88[5 -3 ];do return v86[v268](v13(v86,v268 + (1 -0) ,v88[1 + 2 ]));end break;end end end elseif (v89<=(74 -22)) then if (v89<=((612 + 243) -(118 + 688))) then if (v89==((72 + 24) -(25 + 23))) then v86[v88[2]][v88[1 + 2 ]]=v88[4];else local v190=v88[(2548 -660) -(927 + 959) ];local v191={};for v229=3 -(1 + 1) , #v85 do local v230=732 -(16 + 716) ;local v231;while true do if (v230==0) then v231=v85[v229];for v372=0, #v231 do local v373=v231[v372];local v374=v373[1 -0 ];local v375=v373[2];if (((v374==v86) and (v375>=v190)) or (3026>=4046)) then v191[v375]=v374[v375];v373[98 -(11 + 86) ]=v191;end end break;end end end end elseif (v89<=50) then local v192=0 -0 ;local v193;while true do if ((2008>638) and (v192==(285 -(175 + 110)))) then v193=v88[2];do return v13(v86,v193,v81);end break;end end elseif (v89>(128 -77)) then if (v86[v88[9 -7 ]]==v86[v88[1800 -(503 + 1293) ]]) then v80=v80 + 1 ;else v80=v88[8 -5 ];end else v86[v88[2 + 0 ]]=v86[v88[1064 -(810 + 251) ]] + v88[3 + 1 ] ;end elseif (v89<=(17 + 37)) then if (v89==53) then v86[v88[2]]=v86[v88[3 + 0 ]];elseif  not v86[v88[535 -(43 + 490) ]] then v80=v80 + (734 -(711 + 22)) ;else v80=v88[11 -8 ];end elseif ((1775<=3233) and (v89<=(914 -(240 + 619)))) then if (v86[v88[1 + (1 -0) ]]==v88[5 -1 ]) then v80=v80 + 1 ;else v80=v88[(1 -0) + (1882 -(446 + 1434)) ];end elseif (v89==56) then v86[v88[1746 -(1344 + 400) ]]= #v86[v88[408 -(255 + 150) ]];else local v273=0;local v274;while true do if ((v273==(0 + 0)) or (4543==1997)) then v274=v88[2 + 0 ];v86[v274](v13(v86,v274 + 1 ,v81));break;end end end elseif (v89<=(286 -219)) then if (v89<=(200 -138)) then if ((v89<=(1798 -((1687 -(1040 + 243)) + 1335))) or (3102<728)) then if (v89>((1384 -920) -(183 + 223))) then local v196=0;local v197;while true do if (v196==(0 -0)) then v197=v88[2 + 0 ];do return v13(v86,v197,v81);end break;end end else local v198=v86[v88[2 + 2 ]];if  not v198 then v80=v80 + (338 -(10 + 327)) ;else local v275=0;while true do if ((345==345) and (v275==0)) then v86[v88[2]]=v198;v80=v88[3 + 0 ];break;end end end end elseif (v89<=60) then local v199=338 -(118 + 220) ;local v200;local v201;while true do if ((v199==(0 + (1847 -(559 + 1288)))) or (2827<378)) then v200=v88[451 -(108 + 341) ];v201={};v199=1;end if ((v199==1) or (3476<2597)) then for v358=1 + 0 , #v85 do local v359=0;local v360;while true do if ((3079<4794) and (v359==(0 -0))) then v360=v85[v358];for v418=1493 -(711 + 782) , #v360 do local v419=0 -0 ;local v420;local v421;local v422;while true do if (v419==1) then v422=v420[471 -((2201 -(609 + 1322)) + 199) ];if ((4854>4464) and (v421==v86) and (v422>=v200)) then v201[v422]=v421[v422];v420[1 + 0 ]=v201;end break;end if (v419==(1819 -(580 + 1239))) then v420=v360[v418];v421=v420[1];v419=2 -1 ;end end end break;end end end break;end end elseif ((v89>(59 + 2)) or (4912==3758)) then local v276=v77[v88[1 + 2 ]];local v277;local v278={};v277=v10({},{__index=function(v320,v321) local v322=0 + 0 ;local v323;while true do if (v322==(0 -0)) then v323=v278[v321];return v323[1 + 0 ][v323[1169 -(645 + 522) ]];end end end,__newindex=function(v324,v325,v326) local v327=v278[v325];v327[1791 -(1010 + 780) ][v327[2 + 0 ]]=v326;end});for v329=4 -3 ,v88[11 -7 ] do local v330=1836 -(1045 + 791) ;local v331;while true do if ((0 -0)==v330) then v80=v80 + (1 -0) ;v331=v76[v80];v330=(1325 -819) -(351 + 154) ;end if (v330==1) then if ((126<=3482) and (v331[1575 -(1281 + (1459 -1166)) ]==(319 -(28 + 238)))) then v278[v329-(2 -1) ]={v86,v331[3]};else v278[v329-(1 + 0) ]={v64,v331[2 + 1 ]};end v85[ #v85 + 1 ]=v278;break;end end end v86[v88[2]]=v29(v276,v277,v65);else v86[v88[2]]=v88[473 -(15 + 366 + 89) ];end elseif (v89<=(57 + 7)) then if ((v89>(43 + (72 -52))) or (2374==4374)) then v86[v88[2 -0 ]]=v86[v88[2 + 1 ]]%v88[1160 -(1074 + 82) ] ;else for v232=v88[3 -1 ],v88[1787 -(214 + 1570) ] do v86[v232]=nil;end end elseif (v89<=((667 + 853) -(990 + 465))) then v86[v88[2]]= #v86[v88[(5 -3) + 1 + 0 ]];elseif (v89==(29 + 37)) then v86[v88[2 + 0 ]]=v88[11 -8 ] + v86[v88[1730 -(1668 + 58) ]] ;else local v283=626 -(512 + 114) ;local v284;local v285;local v286;local v287;while true do if (v283==(0 -0)) then v284=v88[3 -1 ];v285,v286=v79(v86[v284](v86[v284 + (3 -2) ]));v283=1;end if (v283==1) then v81=(v286 + v284) -(1 + 0) ;v287=0 + 0 ;v283=2 + 0 ;end if (v283==(6 -(7 -3))) then for v394=v284,v81 do local v395=1994 -(109 + 1885) ;while true do if ((1469 -(1269 + 200))==v395) then v287=v287 + (1 -(0 + 0)) ;v86[v394]=v285[v287];break;end end end break;end end end elseif ((1575==1575) and (v89<=(887 -(98 + 717)))) then if (v89<=(895 -(802 + 24))) then if (v89==(117 -49)) then local v204=v88[2 + 0 ];v86[v204]=v86[v204](v13(v86,v204 + (1 -0) ,v81));elseif  not v86[v88[1 + 1 ]] then v80=v80 + 1 + 0 ;else v80=v88[3 + 0 + 0 ];end elseif (v89<=70) then local v206=0;local v207;local v208;local v209;local v210;while true do if ((v206==1) or (2234==1455)) then v81=(v209 + v207) -(1 + 0) ;v210=0 + 0 ;v206=5 -3 ;end if (2==v206) then for v361=v207,v81 do v210=v210 + 1 ;v86[v361]=v208[v210];end break;end if ((v206==(0 -0)) or (1067>1779)) then v207=v88[2];v208,v209=v79(v86[v207](v13(v86,v207 + 1 + 0 ,v88[3])));v206=1 + 0 ;end end elseif (v89>(59 + 12)) then local v289=v88[2 + 0 ];local v290,v291=v79(v86[v289](v86[v289 + 1 ]));v81=(v291 + v289) -(1 + 0) ;local v292=1433 -(797 + 636) ;for v333=v289,v81 do local v334=0 -0 ;while true do if ((2161>=934) and (v334==0)) then v292=v292 + (1620 -(1427 + 188 + 4)) ;v86[v333]=v290[v292];break;end end end else local v293=0 + 0 ;local v294;local v295;while true do if ((0 -0)==v293) then v294=v88[2 + 0 ];v295=v86[v88[2 + 1 ]];v293=327 -(192 + (567 -(153 + 280))) ;end if (v293==1) then v86[v294 + (1277 -(316 + 960)) ]=v295;v86[v294]=v295[v88[(8 -5) + 1 ]];break;end end end elseif (v89<=74) then if ((1612==1612) and (v89==73)) then local v211=v88[2 + 0 ];local v212=v86[v211 + 2 ];local v213=v86[v211] + v212 ;v86[v211]=v213;if ((4352>=2833) and (v212>(0 + 0 + 0 + 0))) then if (v213<=v86[v211 + (3 -2) ]) then v80=v88[554 -(83 + 468) ];v86[v211 + (1809 -(1202 + 604)) ]=v213;end elseif (v213>=v86[v211 + (4 -(2 + 1)) ]) then local v366=0 -0 ;while true do if ((v366==((0 + 0) -0)) or (3222<3073)) then v80=v88[3];v86[v211 + 3 ]=v213;break;end end end else v86[v88[327 -(45 + 280) ]][v88[3 + 0 + 0 ]]=v86[v88[4 + 0 ]];end elseif ((744<=2942) and (v89<=(28 + 47))) then local v217=0 + 0 ;local v218;local v219;local v220;while true do if (v217==(1 + 0)) then v220=v86[v218 + (3 -1) ];if (v220>(1911 -(340 + 1571))) then if ((v219>v86[v218 + 1 ]) or (1833<=1322)) then v80=v88[2 + 1 ];else v86[v218 + (4 -1) ]=v219;end elseif (v219<v86[v218 + 1 ]) then v80=v88[2 + 1 ];else v86[v218 + (1775 -(1733 + 39)) ]=v219;end break;end if (v217==(0 -0)) then v218=v88[2];v219=v86[v218];v217=1035 -(125 + 909) ;end end elseif (v89>76) then local v296=1948 -(1096 + 852) ;local v297;while true do if (v296==0) then v297=v88[1 + 1 ];v86[v297](v86[v297 + 1 ]);break;end end else local v298=0 -0 ;local v299;while true do if ((v298==((667 -(89 + 578)) + 0)) or (3467<=1055)) then v299=v88[514 -(409 + 103) ];v86[v299]=v86[v299](v13(v86,v299 + (237 -(46 + 190)) ,v81));break;end end end v80=v80 + (96 -(51 + 44)) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);